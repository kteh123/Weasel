// *********************
// * ImageTypes
// *********************
(FixedInternalImagePixelType "float")
(MovingInternalImagePixelType "float")
(FixedImageDimension 2)
(MovingImageDimension 2)

(UseDirectionCosines "true")

// *********************
// * Components
// *********************
(Registration "MultiResolutionRegistration")
// Image intensities are sampled using an ImageSampler, Interpolator and ResampleInterpolator.
// Image sampler is responsible for selecting points in the image to sample. 
// The RandomCoordinate simply selects random positions. 
(ImageSampler "RandomCoordinate")
// Interpolator is responsible for interpolating off-grid posititions during optimization. 
// The BSplineInterpolator with BSplineInterpolationOrder = 1 used here is very fast and uses very little memory
(Interpolator "BSplineInterpolator")
// ResampleInterpolator here chosen to be FinalBSplineInterpolator with FinalBSplineInterpolationOrder = 1
// is used to resample the result image from the moving image once the final transformation has been found.
// This is a one-time step so the additional computational complexity is worth the trade-off for higher image quality.
(ResampleInterpolator "FinalBSplineInterpolator")
(Resampler "DefaultResampler")
// Order of B-Spline interpolation used during registration/optimisation.
// It may improve accuracy if you set this to 3. Never use 0.
// An order of 1 gives linear interpolation. This is in most 
// applications a good choice.
(BSplineInterpolationOrder 1)
// Order of B-Spline interpolation used for applying the final
// deformation.
// 3 gives good accuracy; recommended in most cases.
// 1 gives worse accuracy (linear interpolation)
// 0 gives worst accuracy, but is appropriate for binary images
// (masks, segmentations); equivalent to nearest neighbor interpolation.
(FinalBSplineInterpolationOrder 1)
// Pyramids found in Elastix:
// 1)	Smoothing -> Smoothing: YES, Downsampling: NO
// 2)	Recursive -> Smoothing: YES, Downsampling: YES
//      If Recursive is chosen and only # of resolutions is given 
//      then downsamlping by a factor of 2 (default)
// 3)	Shrinking -> Smoothing: NO, Downsampling: YES
(FixedImagePyramid "FixedSmoothingImagePyramid")
(MovingImagePyramid "MovingSmoothingImagePyramid")
(Optimizer "AdaptiveStochasticGradientDescent")
// Whether transforms are combined by composition or by addition.
// In generally, Compose is the best option in most cases.
// It does not influence the results very much.
(HowToCombineTransforms "Compose")
(Transform "BSplineTransform")

// Metric
(Metric "AdvancedMeanSquares")
// Number of grey level bins in each resolution level,
// for the mutual information. 16 or 32 usually works fine.
// You could also employ a hierarchical strategy:
//(NumberOfHistogramBins 16 32 64)
(NumberOfHistogramBins 32)

// *********************
// * Transformation
// *********************
// The control point spacing of the bspline transformation in 
// the finest resolution level. Can be specified for each 
// dimension differently. Unit: mm.
// The lower this value, the more flexible the deformation.
// Low values may improve the accuracy, but may also cause
// unrealistic deformations.
// By default the grid spacing is halved after every resolution,
// such that the final grid spacing is obtained in the last 
// resolution level.
// The grid spacing here is specified in voxel units.
//(FinalGridSpacingInVoxels 16)
(FinalGridSpacingInPhysicalUnits 50.0 50.0)

// *********************
// * Optimizer settings
// *********************
// The number of resolutions. 1 Is only enough if the expected
// deformations are small. 3 or 4 mostly works fine. For large
// images and large deformations, 5 or 6 may even be useful.
(NumberOfResolutions 4)
(AutomaticParameterEstimation "true")
(ASGDParameterEstimationMethod "Original")
(MaximumNumberOfIterations 500)
// The step size of the optimizer, in mm. By default the voxel size is used.
// which usually works well. In case of unusual high-resolution images
// (eg histology) it is necessary to increase this value a bit, to the size
// of the "smallest visible structure" in the image:
(MaximumStepLength 0.1)
// *********************
// * Pyramid settings
// *********************
// The downsampling/blurring factors for the image pyramids.
// By default, the images are downsampled by a factor of 2
// compared to the next resolution.
(ImagePyramidSchedule 8 8  4 4  2 2  1 1 )

// *********************
// * Sampler parameters
// *********************
// Number of spatial samples used to compute the mutual
// information (and its derivative) in each iteration.
// With an AdaptiveStochasticGradientDescent optimizer,
// in combination with the two options below, around 2000
// samples may already suffice.
(NumberOfSpatialSamples 2048)
// Refresh these spatial samples in every iteration, and select
// them randomly. See the manual for information on other sampling
// strategies.
(NewSamplesEveryIteration "true")
(CheckNumberOfSamples "true")

// *********************
// * Mask settings
// *********************
// If you use a mask, this option is important. 
// If the mask serves as region of interest, set it to false.
// If the mask indicates which pixels are valid, then set it to true.
// If you do not use a mask, the option doesn't matter.
(ErodeMask "false")
(ErodeFixedMask "false")

// *********************
// * Output settings
// *********************
//Default pixel value for pixels that come from outside the picture:
(DefaultPixelValue 0)
// Choose whether to generate the deformed moving image.
// You can save some time by setting this to false, if you are
// not interested in the final deformed moving image, but only
// want to analyze the deformation field for example.
(WriteResultImage "true")
// The pixel type and format of the resulting deformed moving image
(ResultImagePixelType "float")
(ResultImageFormat "mhd")
